<!DOCTYPE html>
<html lang="en">
  <head>
    <meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=0">
    <title>WWZ-AI</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
      }
      .topbar {
        width: 100%;
        min-width: 600px;
        height: 60px;
        background-color: #ff8c00; /* 橙色 */
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .chatbox {
        width: 100%; /* 与屏幕一样宽 */
        height: 360px;
        margin: 20px auto;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 5px 1px #ff8c00; /* 橙色 */
      }
      .chat {
        width: 100%; /* 与屏幕一样宽 */
        height: 300px;
        padding: 20px;
        overflow: auto;
      }
      hr {
        height: 1px;
        border: none;
        background-color: #ff8c0067; /* 橙色 */
      }
      .chatbox button {
        width: 40px;
        height: 40px;
        position: relative;
        margin: 9px 9px 9px calc(100% - 49px);
        background-color: #ff8c00; /* 橙色 */
        color: white;
        border: none;
        border-radius: 10px;
        cursor: pointer;
      }
      button svg {
        margin: 10px;
      }
      .input-container {
        width: 100%; /* 与屏幕一样宽 */
        height: 160px;
        margin: 20px auto;
        border-radius: 10px;
        background-color: #fff;
        box-shadow: 0 0 5px 1px #ff8c00; /* 橙色 */
      }
      .input-container textarea {
        width: 100%;
        height: 100px;
        border-radius: 10px;
        padding: 20px;
        font-weight: 800;
        outline: none;
        border: none;
        resize: none;
      }
      .lastbox {
        width: 100%;
        height: 56px;
        display: flex;
      }
      .model-container {
        position: relative;
        margin: auto auto auto 9px;
      }
      select {
        width: 200px;
        height: 40px;
        padding: 0 10px;
        border-radius: 10px;
        border: 1px solid #ff8c00; /* 橙色 */
        outline: none;
        font-size: 14px;
      }
      select option {
        padding: 8px;
        line-height: 1.5;
      }
      .input-container button {
        width: 40px;
        height: 40px;
        position: relative;
        margin: auto 9px auto auto;
        background-color: #ff8c00; /* 橙色 */
        color: white;
        border: none;
        border-radius: 10px;
        cursor: pointer;
      }
    </style>
  </head>
  <body>
    <script>
      var activationCode = prompt("请输入激活码：");
      if (activationCode !== "wwz-333409") {
        alert("激活码错误，跳转到百度首页");
        window.location.href = "http://www.baidu.com";
      }
    </script>
    <div class="topbar">
      <h1>WWZ-AI</h1>
    </div>
    <div class="chatbox">
      <div class="chat" id="chat-box"></div>
      <hr />
      <button onclick="clearConversation()">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="currentColor"
          viewBox="0 0 16 16"
        >
          <path
            d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z"
          />
        </svg>
      </button>
    </div>
    <div class="input-container">
      <textarea
        type="text"
        id="user-input"
        placeholder="请在这里输入"
      ></textarea>
      <hr />
      <div class="lastbox">
        <div class="model-container">
          <select id="model-selector" onchange="changeModel()">
            <option value="gpt-3.5-turbo">gpt-3.5-turbo</option>
            <option value="gpt-3.5-turbo-16k">gpt-3.5-turbo-16k</option>
            <option value="gpt-4">gpt-4</option>
            <option value="gpt-4-browsing">gpt-4-browsing</option>
            <option value="gpt-4-dalle">gpt-4-dalle</option>
            <option value="gpt-4-32k">gpt-4-32k</option>
          </select>
        </div>
        <button onclick="sendMessage()">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="currentColor"
            viewBox="0 0 16 16"
          >
            <path
              d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"
            />
          </svg>
        </button>
      </div>
    </div>
    <script>
      var conversation = [
        { role: "system", content: "You are a helpful assistant." },
      ];
      var selectedModel = "gpt-3.5-turbo";
      function sendMessage() {
        var userInput = document.getElementById("user-input").value;
        appendMessage("您", userInput);
        setTimeout(function () {
          typeWriter("AI正在思考中...", "bot"); // 显示“AI正在思考中...” 0.5秒延迟
        }, 200);
        conversation.push({
          role: "user",
          content: userInput,
        });
        var model = selectedModel;
        var requestOptions = {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: "Bearer sk-DrRyxydURFyl1jLfHlbloDT066Uf4Y2euI8zhcaTELX7HPUB ",
          },
          body: JSON.stringify({
            model: model,
            messages: conversation,
            stream: false,
            temperature: 0.5,
            max_tokens: 2048,
          }),
        };
        fetch(
          "https://api.gptgod.online/v1/chat/completions",
          requestOptions
        )
          .then((response) => response.json())
          .then((data) => {
            var botResponse = data.choices[0].message.content;
            setTimeout(function () {
              typeWriter("AI：" + botResponse, "bot");
              conversation.push({
                role: "assistant",
                content: botResponse,
              });
            }, 1500);
          })
          .catch((error) => {
            console.error("Error:", error);
            appendErrorMessage("出现错误：" + error);
          });
        document.getElementById("user-input").value = "";
      }
      function typeWriter(text, sender) {
        var chatBox = document.getElementById("chat-box");
        var messageDiv = document.createElement("div");
        messageDiv.className = sender;
        var typingSpan = document.createElement("span");
        typingSpan.className = "typing";
        typingSpan.innerHTML = text;
        messageDiv.appendChild(typingSpan);
        chatBox.appendChild(messageDiv);
        chatBox.scrollTop = chatBox.scrollHeight;
      }
      function appendMessage(sender, message) {
        var chatBox = document.getElementById("chat-box");
        var messageDiv = document.createElement("div");
        messageDiv.className = sender;
        messageDiv.innerHTML = "<strong>" + sender + ":</strong> " + message;
        chatBox.appendChild(messageDiv);
        chatBox.scrollTop = chatBox.scrollHeight;
      }
      function appendErrorMessage(message) {
        var chatBox = document.getElementById("chat-box");
        var errorDiv = document.createElement("div");
        errorDiv.className = "error";
        errorDiv.innerHTML = "<strong>Error:</strong> " + message;
        chatBox.appendChild(errorDiv);
        chatBox.scrollTop = chatBox.scrollHeight;
      }
      function changeModel() {
        clearConversation();
        selectedModel = document.getElementById("model-selector").value;
      }
      function clearConversation() {
        conversation = [];
        document.getElementById("chat-box").innerHTML = "";
      }
      document
        .getElementById("user-input")
        .addEventListener("keydown", function (event) {
          if (event.key === "Enter") {
            event.preventDefault();
            sendMessage();
          }
        });
    </script>
  </body>
</html>
